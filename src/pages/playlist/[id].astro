---
import Layout from '@/layouts/Layout.astro'
import { playlists, songs } from '@/lib/data'
import Back from '@/icons/Back.astro'
import Forward from '@/icons/Forward.astro'
import PlaylistPlayButton from '@/components/Playlist/PlaylistPlayButton'
import SongItem from '@/components/Playlist/SongItem'

const { id } = Astro.params

const playlist = playlists.find((playlist) => playlist.id === id)
const playlistSongs = songs.filter((song) => song.albumId === playlist?.albumId)

const colors = playlist?.color
const bgGradient = {
  background: `linear-gradient(to bottom, ${colors?.accent} 0%, rgba(0, 0, 0, 0.6) 85%, #121212 100%)`,
}
---

<Layout title=`${playlist?.title} | Spotify Playlist`>
  <div
    id='playlistContainer'
    class='max-h-[calc(100dvh-5.5rem)] rounded-lg overflow-y-scroll md:max-h-[calc(100dvh-6.5rem)]'
  >
    <section class='px-5' style={bgGradient}>
      <header class='py-4 flex gap-2'>
        <a
          href='/'
          aria-label='Go to main page'
          class='w-8 h-8 bg-black/70 rounded-full [&_svg]:h-full [&_svg]:mx-auto disabled:opacity-50 disabled:cursor-not-allowed'
        >
          <Back />
        </a>

        <button
          type='button'
          aria-label='Go Forward'
          disabled
          class='hidden w-8 h-8 bg-black/70 rounded-full [&_svg]:mx-auto disabled:opacity-50 disabled:cursor-not-allowed lg:inline-block'
        >
          <Forward />
        </button>
      </header>

      <div class='px-1 flex flex-col items-center gap-4 md:flex-row'>
        <picture
          class='w-[14.5rem] h-[14.5rem] rounded-sm shadow-[0_4px_60px_rgba(0,0,0,.5)]'
        >
          <img src={playlist?.cover} alt={playlist?.title} class='rounded-sm' />
        </picture>

        <h1 class='text-3xl font-bold md:text-6xl'>{playlist?.title}</h1>
      </div>
    </section>

    <div class='px-5 py-4'>
      <PlaylistPlayButton playlistId={playlist?.id} client:visible />
    </div>

    <section class='mt-3 px-1 md:px-5'>
      <header
        class='hidden px-4 text-sm text-white/50 border-b border-white/10 md:grid md:grid-cols-[1rem_minmax(120px,4fr)_minmax(120px,3fr)_minmax(120px,3fr)] md:gap-4'
      >
        <span>#</span>
        <span>Title</span>
        <span>Album</span>
        <span>Duration</span>
      </header>

      <ul class='mt-2 flex flex-col'>
        {
          playlistSongs.map((song, index) => {
            return (
              <SongItem
                song={song}
                playlistId={Number(playlist?.id)}
                index={index}
                client:visible
              />
            )
          })
        }
      </ul>
    </section>
  </div>
</Layout>

<style>
  @media (width > 1024px) {
    #playlistContainer::-webkit-scrollbar {
      width: 0.75rem;
      height: 0.75rem;
    }

    #playlistContainer::-webkit-scrollbar-track {
      background: transparent;
      border-top-right-radius: 0.5rem;
      border-bottom-right-radius: 0.5rem;
    }

    #playlistContainer::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.3);
    }

    #playlistContainer::-webkit-scrollbar-thumb:hover {
      background: rgba(255, 255, 255, 0.5);
    }

    #playlistContainer::-webkit-scrollbar-thumb:active {
      background: rgba(255, 255, 255, 0.7);
    }
  }
</style>
