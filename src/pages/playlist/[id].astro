---
import Layout from '@/layouts/Layout.astro'
import { playlists, songs } from '@/lib/data'
import Back from '@/icons/Back.astro'
import Forward from '@/icons/Forward.astro'
import PlaylistPlayButton from '@/components/Playlist/PlaylistPlayButton'

const { id } = Astro.params

const playlist = playlists.find((playlist) => playlist.id === id)
const playlistSongs = songs.filter((song) => song.albumId === playlist?.albumId)

const colors = playlist?.color
const bgGradient = {
  background: `linear-gradient(to bottom, ${colors?.accent} 0%, rgba(0, 0, 0, 0.6) 85%, #121212 100%)`,
}
---

<Layout title=`${playlist?.title} | Spotify Playlist`>
  <div
    id='playlistContainer'
    class='max-h-[calc(100vh-6rem)] rounded-lg overflow-y-scroll'
  >
    <section class='px-5' style={bgGradient}>
      <header class='py-4 flex gap-2'>
        <button
          type='button'
          aria-label='Go Back'
          class='w-8 h-8 bg-black/70 rounded-full [&_svg]:mx-auto disabled:opacity-50 disabled:cursor-not-allowed'
        >
          <Back />
        </button>

        <button
          type='button'
          aria-label='Go Forward'
          disabled
          class='w-8 h-8 bg-black/70 rounded-full [&_svg]:mx-auto disabled:opacity-50 disabled:cursor-not-allowed'
        >
          <Forward />
        </button>
      </header>

      <div class='px-1 flex items-center gap-4'>
        <picture
          class='w-[14.5rem] h-[14.5rem] rounded-sm shadow-[0_4px_60px_rgba(0,0,0,.5)]'
        >
          <img src={playlist?.cover} alt={playlist?.title} class='rounded-sm' />
        </picture>

        <h1 class='text-6xl font-bold'>{playlist?.title}</h1>
      </div>
    </section>

    <div class='px-5 py-4'>
      <PlaylistPlayButton playlistId={playlist?.id} client:visible />
    </div>

    <section class='mt-3 px-5'>
      <header
        class='px-4 grid grid-cols-[1rem_minmax(120px,4fr)_minmax(120px,3fr)_minmax(120px,3fr)] gap-4 text-sm text-white/50 border-b border-white/10'
      >
        <span>#</span>
        <span>Title</span>
        <span>Album</span>
        <span>Duration</span>
      </header>

      <ul class='mt-2 flex flex-col'>
        {
          playlistSongs.map((song, index) => {
            return (
              <li class='py-2 px-4 grid grid-cols-[1rem_minmax(120px,4fr)_minmax(120px,3fr)_minmax(120px,3fr)] items-center gap-4 rounded-md hover:bg-[#1a1a1a]'>
                <span class='opacity-50'>{index + 1}</span>

                <div class='flex items-center gap-3'>
                  <img
                    src={song.image}
                    alt={song.title}
                    class='w-10 h-10 rounded-sm'
                  />

                  <div>
                    <h3>{song.title}</h3>
                    <span class='text-sm opacity-50'>
                      {song.artists.join(', ')}
                    </span>
                  </div>
                </div>

                <span class='opacity-50'>{playlist?.title}</span>

                <span class='opacity-50'>{song.duration}</span>
              </li>
            )
          })
        }
      </ul>
    </section>
  </div>
</Layout>

<style>
  @media (width > 1024px) {
    #playlistContainer::-webkit-scrollbar {
      width: 0.75rem;
      height: 0.75rem;
    }

    #playlistContainer::-webkit-scrollbar-track {
      background: transparent;
      border-top-right-radius: 0.5rem;
      border-bottom-right-radius: 0.5rem;
    }

    #playlistContainer::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.3);
    }

    #playlistContainer::-webkit-scrollbar-thumb:hover {
      background: rgba(255, 255, 255, 0.5);
    }

    #playlistContainer::-webkit-scrollbar-thumb:active {
      background: rgba(255, 255, 255, 0.7);
    }
  }
</style>
